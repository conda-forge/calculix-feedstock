diff --git a/ccx_2.17/src/CalculiXstep.c b/ccx_2.17/src/CalculiXstep.c
index a797bd2..561267e 100644
--- a/ccx_2.17/src/CalculiXstep.c
+++ b/ccx_2.17/src/CalculiXstep.c
@@ -25,12 +25,14 @@
 #include <stdio.h>
 #include <string.h>
 #include "CalculiX.h"
+#include <time.h>
 
 #ifdef CALCULIX_MPI
 ITG myid = 0,nproc = 0;
 #endif
 
-struct timespec totalCalculixTimeStart,totalCalculixTimeEnd; 
+
+clock_t totalCalculixTimeStart, totalCalculixTimeEnd, totalCalculixTime;
 
 void CalculiXstep(int argc,char argv[][133],ITG **nelemloadp,double **xloadp,
 		  ITG *nload,char **sideloadp,double *timepar,ITG *ne,
@@ -255,8 +257,7 @@ void CalculiXstep(int argc,char argv[][133],ITG **nelemloadp,double **xloadp,
 
     // end change DLR
 
-   
-    clock_gettime(CLOCK_MONOTONIC, &totalCalculixTimeStart);
+    totalCalculixTimeStart = clock()
 
     if(argc==1){printf("Usage: CalculiX.exe -i jobname\n");FORTRAN(stop,());}
     else{
@@ -2021,16 +2022,13 @@ void CalculiXstep(int argc,char argv[][133],ITG **nelemloadp,double **xloadp,
 #ifdef CALCULIX_EXTERNAL_BEHAVIOURS_SUPPORT
   calculix_freeExternalBehaviours();
 #endif /* CALCULIX_EXTERNAL_BEHAVIOURS_SUPPORT */
+  totalCalculixTimeEnd = clock()
+  totalCalculixTime = totalCalculixTimeEnd - totalCalculixTimeStart;
 
-  clock_gettime(CLOCK_MONOTONIC, &totalCalculixTimeEnd); 
+  double totalCalculixTimeInSeconds = totalCalculixTime / CLOCKS_PER_SEC;
 
-  totalCalculixTime = (totalCalculixTimeEnd.tv_sec - totalCalculixTimeStart.tv_sec) * 1e9; 
-  totalCalculixTime = (totalCalculixTime + (totalCalculixTimeEnd.tv_nsec - totalCalculixTimeStart.tv_nsec)) * 1e-9;
-  
   printf("________________________________________\n\n");
-  
-  printf("Total CalculiX Time: %lf\n", totalCalculixTime);
-
+  printf("Total CalculiX Time:  %e seconds", totalCalculixTimeInSeconds);
   printf("________________________________________\n");
 
   return;
diff --git a/ccx_2.17/src/ccx_2.17.c b/ccx_2.17/src/ccx_2.17.c
index d1e6aa1..8ccfbd4 100644
--- a/ccx_2.17/src/ccx_2.17.c
+++ b/ccx_2.17/src/ccx_2.17.c
@@ -34,7 +34,7 @@
 ITG myid = 0,nproc = 0;
 #endif
 
-struct timespec totalCalculixTimeStart,totalCalculixTimeEnd; 
+clock_t totalCalculixTimeStart, totalCalculixTimeEnd, totalCalculixTime; 
 
 int main(int argc,char *argv[])
 {
@@ -115,7 +115,7 @@ int main(int argc,char *argv[])
   MPI_Comm_size(MPI_COMM_WORLD, &nproc) ;
 #endif
 
-  clock_gettime(CLOCK_MONOTONIC, &totalCalculixTimeStart);
+  totalCalculixTimeStart = clock()
 
   if(argc==1){printf("Usage: CalculiX.exe -i jobname\n");FORTRAN(stop,());}
   else{
@@ -1853,15 +1853,13 @@ int main(int argc,char *argv[])
   calculix_freeExternalBehaviours();
 #endif /* CALCULIX_EXTERNAL_BEHAVIOURS_SUPPORT */
 
-  clock_gettime(CLOCK_MONOTONIC, &totalCalculixTimeEnd); 
+  totalCalculixTimeEnd = clock()
+  totalCalculixTime = totalCalculixTimeEnd - totalCalculixTimeStart;
 
-  totalCalculixTime = (totalCalculixTimeEnd.tv_sec - totalCalculixTimeStart.tv_sec) * 1e9; 
-  totalCalculixTime = (totalCalculixTime + (totalCalculixTimeEnd.tv_nsec - totalCalculixTimeStart.tv_nsec)) * 1e-9;
-  
-  printf("________________________________________\n\n");
-  
-  printf("Total CalculiX Time: %lf\n", totalCalculixTime);
+  double totalCalculixTimeInSeconds = totalCalculixTime / CLOCKS_PER_SEC;
 
+  printf("________________________________________\n\n");
+  printf("Total CalculiX Time:  %e seconds", totalCalculixTimeInSeconds);
   printf("________________________________________\n");
 
   return 0;
